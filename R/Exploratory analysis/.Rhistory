paquetes <- c("rddensity", "writexl", "arrow", "tidyverse", "haven", "dplyr", "openxlsx", "ggplot2", "rdrobust", "cowplot", "ragg", "R.utils")
for (paquete in paquetes) {
if (!require(paquete, character.only = TRUE)) {
install.packages(paquete)
library(paquete, character.only = TRUE)
}
}
#base_dir <- "//wmedesrv/GAMMA/Christian Posso/_banrep_research/proyectos/project_transport_health"
base_dir  <- "D:/Steban Pineda/Documents/DIME/Transportation and health"
project_folder <- base_dir
data_dir       <- file.path(base_dir, "data")
output_folder  <- file.path(base_dir, "outputs")
# ----
# 1. Definitions and functions -----------------------------------------------------
# Define a variable to categorize age into group - RIPS
categorize_age <- function(df) {
df <- df %>%
mutate(
grupo_edad = case_when(
between(edad_RIPS , 18, 26) ~ 1,
between(edad_RIPS , 27, 59) ~ 2,
edad_RIPS >= 60 ~ 3
)
)
return(df)
}
# Define a variable to categorize age into group - PILA
categorize_age_pila <- function(df) {
df <- df %>%
mutate(
grupo_edad = case_when(
between(edad_PILA , 18, 26) ~ 1,
between(edad_PILA , 27, 59) ~ 2,
edad_PILA >= 60 ~ 3
)
)
return(df)
}
# Define a function to create the running variables centered in zero
centrar_puntaje <- function(df) {
df <- df %>%
mutate(
cutoff30 = puntaje - 30.56,
cutoff40 = puntaje - 40
)
return(df)
}
# ----
# Databases - SISBEN and MASTER
all_sisben_bgta <- open_dataset(sprintf('%s/%s', project_folder, 'data/sisben3_bgta_demog.parquet'))
master          <- open_dataset(sprintf('%s/%s', project_folder, 'data/master.parquet'))
# Databases - RIPS
RIPS_history_file <- sprintf('%s/%s', project_folder, 'data/Data_health/history_RIPS.parquet')
all_rips          <- open_dataset(RIPS_history_file)
main_rips         <- open_dataset(RIPS_history_file) %>%
left_join(
open_dataset(sprintf("%s/%s", project_folder, "data/master.parquet")),
by = 'personabasicaid'
) %>%
rename(COD_MPIO = COD_MPIO.x, COD_DPTO = COD_DPTO.x, puntaje = puntaje.x)
# Databases - PILA
PILA_history_file <- sprintf('%s/%s', project_folder, 'data/Data_labor/history_PILA.parquet')
all_pila          <- open_dataset(PILA_history_file)
main_pila         <- open_dataset(PILA_history_file) %>%
left_join(
open_dataset(sprintf("%s/%s", project_folder, "data/master.parquet")),
by = 'personabasicaid'
) %>%
rename(puntaje = puntaje.x)
all_sisben_bgta
paquetes <- c("rddensity", "writexl", "arrow", "tidyverse", "haven", "dplyr", "openxlsx", "ggplot2", "rdrobust", "cowplot", "ragg", "R.utils")
for (paquete in paquetes) {
if (!require(paquete, character.only = TRUE)) {
install.packages(paquete)
library(paquete, character.only = TRUE)
}
}
#base_dir <- "//wmedesrv/GAMMA/Christian Posso/_banrep_research/proyectos/project_transport_health"
base_dir  <- "D:/Steban Pineda/Documents/DIME/Transportation and health"
project_folder <- base_dir
data_dir       <- file.path(base_dir, "data")
output_folder  <- file.path(base_dir, "outputs")
# ----
# 1. Definitions and functions -----------------------------------------------------
# Define a variable to categorize age into group - RIPS
categorize_age <- function(df) {
df <- df %>%
mutate(
grupo_edad = case_when(
between(edad_RIPS , 18, 26) ~ 1,
between(edad_RIPS , 27, 59) ~ 2,
edad_RIPS >= 60 ~ 3
)
)
return(df)
}
# Define a variable to categorize age into group - PILA
categorize_age_pila <- function(df) {
df <- df %>%
mutate(
grupo_edad = case_when(
between(edad_PILA , 18, 26) ~ 1,
between(edad_PILA , 27, 59) ~ 2,
edad_PILA >= 60 ~ 3
)
)
return(df)
}
# Define a function to create the running variables centered in zero
centrar_puntaje <- function(df) {
df <- df %>%
mutate(
cutoff30 = puntaje - 30.56,
cutoff40 = puntaje - 40
)
return(df)
}
# ----
# 2. Initial databases ------------------------------------------------------------
# Databases - SISBEN and MASTER
all_sisben_bgta <- open_dataset(sprintf('%s/%s', project_folder, 'data/sisben3_bgta_demog.parquet'))
master          <- open_dataset(sprintf('%s/%s', project_folder, 'data/master.parquet'))
# Databases - RIPS
RIPS_history_file <- sprintf('%s/%s', project_folder, 'data/Data_health/history_RIPS.parquet')
all_rips          <- open_dataset(RIPS_history_file)
main_rips         <- open_dataset(RIPS_history_file) %>%
left_join(
open_dataset(sprintf("%s/%s", project_folder, "data/master.parquet")),
by = 'personabasicaid'
) %>%
rename(COD_MPIO = COD_MPIO.x, COD_DPTO = COD_DPTO.x, puntaje = puntaje.x)
# Databases - PILA
PILA_history_file <- sprintf('%s/%s', project_folder, 'data/Data_labor/history_PILA.parquet')
all_pila          <- open_dataset(PILA_history_file)
main_pila         <- open_dataset(PILA_history_file) %>%
left_join(
open_dataset(sprintf("%s/%s", project_folder, "data/master.parquet")),
by = 'personabasicaid'
) %>%
rename(puntaje = puntaje.x)
# ----
# 3. Modified databases to estimations -----------------------------------------
# SISBEN all Bgta
sisben_bgta <- all_sisben_bgta %>%
group_by(documen) %>%
summarise(puntaje  = max(puntaje, na.rm = TRUE))
# SISBEN with personab_id (master)
sisben_pbid <- master %>%
select(personabasicaid, documen, puntaje) %>%
distinct()
# RIPS
main_rips <- main_rips %>%
select(personabasicaid, puntaje) %>%
distinct()
# PILA
main_pila <- main_pila %>%
select(personabasicaid, puntaje) %>%
distinct()
sisben_pbid <- centrar_puntaje(sisben_pbid)
sisben_bgta <- centrar_puntaje(sisben_bgta)
main_rips   <- centrar_puntaje(main_rips)
main_pila   <- centrar_puntaje(main_pila)
sisben_bgta
sisben_pbid
main_pila
main_rips
main_pila <- main_pila %>%
collect
main_rips <- main_rips %>%
collect
sisben_bgta <- sisben_bgta %>%
collect
sisben_pbid <- sisben_pbid %>%
collect
main_pila <- main_pila %>%
sample_frac(0.15)
main_rips <- main_rips %>%
sample_frac(0.15)
sisben_bgta <- sisben_bgta %>%
sample_frac(0.35)
sisben_pbid <- sisben_pbid %>%
sample_frac(0.35)
View(main_pila)
# Función para calcular las métricas requeridas
calcular_metricas <- function(df, nombre_df) {
ind <- length(unique(df$personabasicaid))
ind_30 <- length(unique(df$personabasicaid[df$puntaje < 30.56]))
ind_3040 <- length(unique(df$personabasicaid[df$puntaje >= 30.56 & df$puntaje <= 40]))
ind_40 <- length(unique(df$personabasicaid[df$puntaje > 40]))
ind_2530 <- length(unique(df$personabasicaid[df$puntaje >= 25.56 & df$puntaje <= 30.56]))
ind_3035 <- length(unique(df$personabasicaid[df$puntaje >= 30.56 & df$puntaje <= 35.56]))
ind_3540 <- length(unique(df$personabasicaid[df$puntaje >= 35 & df$puntaje <= 40]))
ind_4045 <- length(unique(df$personabasicaid[df$puntaje >= 40 & df$puntaje <= 45]))
ind_2050 <- length(unique(df$personabasicaid[df$puntaje >= 20 & df$puntaje <= 50]))
return(data.frame(
data = nombre_df,
ind = ind,
ind_30 = ind_30,
ind_3040 = ind_3040,
ind_40 = ind_40,
ind_2530 = ind_2530,
ind_3035 = ind_3035,
ind_3540 = ind_3540,
ind_4045 = ind_4045,
ind_2050 = ind_2050
))
}
res_main_pila <- calcular_metricas(main_pila, "main_pila")
res_main_rips <- calcular_metricas(main_rips, "main_rips")
res_sisben_bgta <- calcular_metricas(sisben_bgta, "sisben_bgta")
res_sisben_pbid <- calcular_metricas(sisben_pbid, "sisben_pbid")
main_pila
# Combina los resultados en un dataframe resumen
resumen <- rbind(res_main_pila, res_main_rips, res_sisben_bgta, res_sisben_pbid)
View(resumen)
# Función para calcular las métricas requeridas
calcular_metricas <- function(df, nombre_df, id_col) {
ind <- length(unique(df[[id_col]]))
ind_30 <- length(unique(df[[id_col]][df$puntaje < 30.56]))
ind_3040 <- length(unique(df[[id_col]][df$puntaje >= 30.56 & df$puntaje <= 40]))
ind_40 <- length(unique(df[[id_col]][df$puntaje > 40]))
ind_2530 <- length(unique(df[[id_col]][df$puntaje >= 25.56 & df$puntaje <= 30.56]))
ind_3035 <- length(unique(df[[id_col]][df$puntaje >= 30.56 & df$puntaje <= 35.56]))
ind_3540 <- length(unique(df[[id_col]][df$puntaje >= 35 & df$puntaje <= 40]))
ind_4045 <- length(unique(df[[id_col]][df$puntaje >= 40 & df$puntaje <= 45]))
ind_2050 <- length(unique(df[[id_col]][df$puntaje >= 20 & df$puntaje <= 50]))
return(data.frame(
data = nombre_df,
ind = ind,
ind_30 = ind_30,
ind_3040 = ind_3040,
ind_40 = ind_40,
ind_2530 = ind_2530,
ind_3035 = ind_3035,
ind_3540 = ind_3540,
ind_4045 = ind_4045,
ind_2050 = ind_2050
))
}
# Calcula las métricas para cada dataframe
res_main_pila <- calcular_metricas(main_pila, "main_pila", "personabasicaid")
res_main_rips <- calcular_metricas(main_rips, "main_rips", "personabasicaid")
res_sisben_bgta <- calcular_metricas(sisben_bgta, "sisben_bgta", "documen")
res_sisben_pbid <- calcular_metricas(sisben_pbid, "sisben_pbid", "personabasicaid")
# Combina los resultados en un dataframe resumen
resumen <- rbind(res_main_pila, res_main_rips, res_sisben_bgta, res_sisben_pbid)
# Muestra el dataframe resumen
print(resumen)
# Función para calcular las métricas requeridas
calcular_metricas <- function(df, nombre_df, id_col) {
ind      <- length(unique(df[[id_col]]))
ind_30   <- length(unique(df[[id_col]][df$puntaje < 30.56]))
ind_3040 <- length(unique(df[[id_col]][df$puntaje >= 30.56 & df$puntaje <= 40]))
ind_40   <- length(unique(df[[id_col]][df$puntaje > 40]))
ind_2530 <- length(unique(df[[id_col]][df$puntaje >= 25.56 & df$puntaje <= 30.56]))
ind_3035 <- length(unique(df[[id_col]][df$puntaje >= 30.56 & df$puntaje <= 35.56]))
ind_3540 <- length(unique(df[[id_col]][df$puntaje >= 35 & df$puntaje <= 40]))
ind_4045 <- length(unique(df[[id_col]][df$puntaje >= 40 & df$puntaje <= 45]))
ind_2050 <- length(unique(df[[id_col]][df$puntaje >= 20 & df$puntaje <= 50]))
return(data.frame(
data = nombre_df,
ind = ind,
ind_30 = ind_30,
ind_3040 = ind_3040,
ind_40 = ind_40,
ind_2530 = ind_2530,
ind_3035 = ind_3035,
ind_3540 = ind_3540,
ind_4045 = ind_4045,
ind_2050 = ind_2050
))
}
# Calcula las métricas para cada dataframe
res_sisben_bgta <- calcular_metricas(sisben_bgta, "sisben_bgta", "documen")
res_sisben_pbid <- calcular_metricas(sisben_pbid, "sisben_pbid", "personabasicaid")
res_main_pila   <- calcular_metricas(main_pila,   "main_pila", "personabasicaid")
res_main_rips   <- calcular_metricas(main_rips,   "main_rips", "personabasicaid")
# Combina los resultados en un dataframe resumen
resumen <- rbind(res_sisben_bgta, res_sisben_pbid, res_main_pila, res_main_rips)
# Muestra el dataframe resumen
print(resumen)
plot1 <- rdplotdensity(rdd, main_pila$cutoff30)
plot1 <- rdplotdensity(main_pila, main_pila$cutoff30)
plot1 <- rdplotdensity(main_pila, cutoff30)
main_pila
plot1 <- rdplotdensity(main_pila, main_pila$cutoff30)
plot1 <- rdplotdensity(main_pila$puntaje)
plot1 <- rdplotdensity(main_pila$puntaje)
plot1 <- rdplotdensity(main_pila, puntaje)
sisben_bgta30 <- rddensity(X=sisben_bgta$cutoff30)
summary(sisben_bgta30)
sisben_bgta
sisben_bgta30 <- rddensity(X=sisben_bgta$cutoff30)
summary(sisben_bgta30)
plot1 <- rdplotdensity(sisben_bgta30, cutoff30)
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta30$cutoff30)
plot1
sisben_bgta30 <- rddensity(X=sisben_bgta$cutoff30)
summary(sisben_bgta30)
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30)
plot1
View(plot1)
plot1
plot1
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotRange = c(-2, 2), plotN = 25))
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotRange = c(-2, 2), plotN = 25)
plot1
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotRange = c(-10, 10))
plot1
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotRange = c(-10, 10), plotN=10000)
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotRange = c(-10, 10), plotN=100)
plot1
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, plotN=1000)
plot1
gc()
plot1 <- rdplotdensity(sisben_bgta30, sisben_bgta$cutoff30, ,
lcol = c("red", "blue"),  histFillCol = "gray24", histLineCol="black",
title="Manipulation Testing based on Density Discontinuity",
xlabel = "Distance to SISBEN cutoff (centered around 0)",
ylabel = "Density",
plotRange = c(-10, 10), plotN = 25)
plot1
histogram(sisben_bgta$cutoff30)
hist(sisben_bgta$cutoff30)
hist(sisben_bgta$cutoff40)
hist(main_pila$cutoff40)
hist(main_rips$cutoff40)
# Generar una variable normal (con media 0 y desviación estándar 1)
n <- nrow(main_pila)
puntaje2 <- rnorm(n)
# Escalar los valores para que estén en el rango de -50 a 50
puntaje2 <- (puntaje2 - min(puntaje2)) / (max(puntaje2) - min(puntaje2)) * 100 - 50
# Agregar la variable al dataframe main_pila
main_pila$puntaje2 <- puntaje2
hist(main_pila$puntaje2)
main_pila30 <- rddensity(X=main_pila$puntaje2)
summary(main_pila30)
plot1 <- rdplotdensity(main_pila30, main_pila$puntaje2, ,
lcol = c("red", "blue"),  histFillCol = "gray24", histLineCol="black",
title="Manipulation Testing based on Density Discontinuity",
xlabel = "Distance to SISBEN cutoff (centered around 0)",
ylabel = "Density",
plotRange = c(-10, 10), plotN = 25)
plot1 <- rdplotdensity(main_pila30, main_pila$puntaje2, ,
lcol = c("red", "blue"),  histFillCol = "gray24", histLineCol="white",
title="Manipulation Testing based on Density Discontinuity",
xlabel = "Distance to SISBEN cutoff (centered around 0)",
ylabel = "Density",
plotRange = c(-10, 10), plotN = 25)
plot1
hist(main_pila$puntaje2)
plot1 <- rdplotdensity(main_pila30, main_pila$puntaje2, ,
lcol = c("red", "blue"),  histFillCol = "gray40", histLineCol="black",
title="Manipulation Testing based on Density Discontinuity",
xlabel = "Distance to SISBEN cutoff (centered around 0)",
ylabel = "Density",
plotN = 25)
plot1
View(resumen)
paquetes <- c("rddensity", "writexl", "arrow", "tidyverse", "haven", "dplyr", "openxlsx", "ggplot2", "rdrobust", "cowplot", "ragg", "R.utils")
for (paquete in paquetes) {
if (!require(paquete, character.only = TRUE)) {
install.packages(paquete)
library(paquete, character.only = TRUE)
}
}
# Directory and creating a new folder to save all the results
base_dir  <- "D:/Steban Pineda/Documents/DIME/Transportation and health"
project_folder <- base_dir
data_dir       <- file.path(base_dir, "data")
output_folder  <- file.path(base_dir, "outputs")
rips_est30 <- sprintf('%s/%s', output_folder, 'parquet/20240627-est_rips30.parquet')
rips_est40 <- sprintf('%s/%s', output_folder, 'parquet/20240627-est_rips40.parquet')
rips_est30 <- open_dataset(rips_est30) %>%  collect
rips_est40 <- open_dataset(rips_est40) %>%  collect
write.xlsx(rips_est30, file = file.path(output_folder, "20240627-rips_est30.xlsx"))
write.xlsx(rips_est40, file = file.path(output_folder, "20240627-rips_est40.xlsx"))
